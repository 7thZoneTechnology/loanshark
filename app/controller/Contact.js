/*
 * File: app/controller/Contact.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.controller.Contact', {
    extend: 'Ext.app.Controller',
    config: {
        stores: [
            'PeopleStore'
        ],
        views: [
            'ContactDetail'
        ],

        refs: {
            ContactDetail: {
                selector: 'ContactDetail',
                xtype: 'ContactDetail',
                autoCreate: true
            },
            myContactDataView: '#myContactDataView'
        },

        control: {
            "#myContactDataView": {
                itemswipe: 'onDataviewItemSwipe'
            },
            "#cancelContact": {
                tap: 'onCancelContactTap'
            },
            "#saveContact": {
                tap: 'onSaveContactTap'
            },
            "#ContactList": {
                itemtap: 'onContactListItemTap'
            },
            "#addContact": {
                tap: 'onAddContactTap'
            }
        }
    },

    onDataviewItemSwipe: function(dataview, index, target, record, e, options) {
        var deleteButtons = dataview.query('button');

        for (var i=0; i < deleteButtons.length; i++) {
            deleteButtons[i].hide();
        }

        target.query('button')[0].show();

        Ext.Viewport.element.on({tap:function(){
            target.query('button')[0].hide();
        }, single:true});
    },

    onCancelContactTap: function(button, e, options) {
        this.getContactDetail().reset();
        Ext.Viewport.setActiveItem(0);
    },

    onSaveContactTap: function(button, e, options) {
        var form = this.getContactDetail();

        Ext.StoreManager.lookup('People').add(form.getValues());

        this.getApplication().getController('Summary').updateSummary();

        this.getContactDetail().reset();
        Ext.Viewport.setActiveItem(0);
    },

    onContactListItemTap: function(dataview, index, target, record, e, options) {
        Ext.Viewport.setActiveItem(this.getContactDetail());
    },

    onAddContactTap: function(button, e, options) {
        Ext.Viewport.setActiveItem(this.getContactDetail());
    }

});