/*
 * File: app/view/DebtDetail.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Payback.view.DebtDetail', {
    extend: 'Ext.form.Panel',
    alias: 'widget.DebtDetail',

    config: {
        style: 'background:  black; ',
        autoDestroy: false,
        layout: {
            type: 'vbox'
        },
        scrollable: false,
        items: [
            {
                xtype: 'toolbar',
                docked: 'bottom',
                items: [
                    {
                        xtype: 'button',
                        id: 'cancelDebt',
                        ui: 'decline',
                        text: 'Cancel'
                    },
                    {
                        xtype: 'spacer'
                    },
                    {
                        xtype: 'button',
                        id: 'saveDebt',
                        ui: 'confirm',
                        text: 'Save'
                    }
                ]
            },
            {
                xtype: 'titlebar',
                docked: 'top',
                ui: 'light',
                title: 'Loan Details',
                items: [
                    {
                        xtype: 'button',
                        id: 'emailDebt',
                        ui: 'gray-button',
                        text: 'send email',
                        align: 'right'
                    }
                ]
            },
            {
                xtype: 'container',
                margin: '0 0 10px 0',
                items: [
                    {
                        xtype: 'label',
                        height: 80,
                        id: 'debtHeaderLabel',
                        padding: '8px 0 0 0',
                        style: 'font-weight: bold;text-align: center; font-size: 75px;background-color: #FE8A28; color: white;'
                    },
                    {
                        xtype: 'button',
                        id: 'addPayment',
                        margin: '5px 10px 5px 10px',
                        padding: '5px',
                        style: 'border-radius: 0; color: black;',
                        ui: 'gray-light-button',
                        text: 'Add Payment'
                    },
                    {
                        xtype: 'fieldset',
                        itemId: 'myfieldset1',
                        items: [
                            {
                                xtype: 'selectfield',
                                label: 'Prey',
                                labelAlign: 'top',
                                name: 'person_id',
                                displayField: 'name',
                                store: 'People',
                                valueField: 'id'
                            },
                            {
                                xtype: 'numberfield',
                                itemId: 'mynumberfield',
                                label: 'Original Loan',
                                labelAlign: 'top',
                                name: 'amount'
                            },
                            {
                                xtype: 'datepickerfield',
                                label: 'Date',
                                labelAlign: 'top',
                                name: 'date',
                                picker: {
                                    ui: 'dark',
                                    doneButton: {
                                        ui: 'gray-button'
                                    },
                                    cancelButton: {
                                        ui: 'gray-light-button'
                                    }
                                }
                            },
                            {
                                xtype: 'textfield',
                                label: 'Notes',
                                labelAlign: 'top',
                                name: 'reason'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'container',
                layout: {
                    type: 'vbox'
                },
                flex: 1,
                items: [
                    {
                        xtype: 'label',
                        html: 'Payment History',
                        margin: '0 12px',
                        padding: '0 0 8px 8px',
                        style: 'font-size: .8em; font-weight: bold;color: gray; 	border-bottom: 2px solid #333;'
                    },
                    {
                        xtype: 'dataview',
                        baseCls: 'x-list',
                        cls: [
                            'x-list-normal'
                        ],
                        id: 'myPaymentDataView',
                        itemId: 'myPaymentDataView',
                        minHeight: '',
                        style: 'color: white;',
                        defaultType: 'myPaymentListItem',
                        store: 'Payments',
                        useComponents: true,
                        disableSelection: true,
                        flex: 1
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onMynumberfieldFocus',
                event: 'focus',
                delegate: '#mynumberfield'
            }
        ]
    },

    onMynumberfieldFocus: function(textfield, e, options) {

        //android work around to hide keyboard.
        if (Ext.os.is.Android)
        Ext.Viewport.element.on({tap:function(){
            var field = document.createElement('input');
            field.setAttribute('type', 'text');
            document.body.appendChild(field);

            setTimeout(function() {
                field.focus();  

                setTimeout(function() {
                    field.setAttribute('style', 'display:none;');
                    field.parentNode.removeChild(field);
                }, 100);
            }, 50);
        }, single:true});
    }

});